
--------------------------Computação Móvel e Ubíqua--------------------------

A computação ubíqua é considerada uma forma de tecnologia onde usuários móveis, serviços e recursos encontram outros usuários, serviços e recursos. Portanto, as responsabilidades pela execução dos serviços utilizados pelo usuário são distribuídas entre diversos dispositivos, sendo cada um com suas características e funções específicas.

Conceito

O conceito da Computação Ubíqua foi criado por Mark Weiser, um cientista da Xerox PARC, em 1991, por meio do seu artigo “O computador do século XXI”. Neste artigo, Weiser imaginou como quaisquer objetos com capacidades computacionais poderiam integrar-se entre si de forma oculta no ambiente para a facilidade na realização das tarefas diárias.

De acordo com Araujo, a computação ubíqua beneficia-se dos avanços da computação móvel e da computação pervasiva. A tecnologia da computação ubíqua, quando aplicada, utiliza e gerencia as vantagens dos conceitos de computação móvel e pervasiva, e da junção das características dos dois conceitos, emerge o conceito de computação ubíqua.

Computação Móvel

A computação móvel é definida como a competência de transportarmos os dispositivos computacionais de forma fácil e prática, possibilitando a presença e a utilização dos mesmos em qualquer lugar. Assim, é possível acessar o conteúdo dos dispositivos independente da localização.

Araujo afirma que combinada com a capacidade de acesso, a computação móvel tem transformado a computação numa atividade que pode ser carregada para qualquer lugar.

Entretanto, o autor também destaca que o modelo de computação móvel não muda enquanto nos movemos, ou seja, os dispositivos móveis não são capazes de identificar o ambiente onde estão e não conseguem se auto ajustar a ele. Esta limitação pode ser contornada com o ajuste manual das configurações do dispositivo feito pelo usuário, porém esta é uma alternativa não aceitada pela a maioria dos usuários, pois acaba sobrepondo a ideia principal da computação móvel, que é a praticidade e facilidade.

Computação Pervasiva

O conceito de computação pervasiva descreve que os dispositivos computacionais estão agregados ao ambiente de forma imperceptível para o usuário. Dessa forma, se induz que o sistema computacional tem a capacidade de obter informações e dados relativos ao ambiente no qual ele está inserido.

É importante que o sistema consiga configurar e alterar aplicações de acordo com o ambiente que ele faz parte no momento. Também é necessário que o dispositivo consiga identificar outros dispositivos, para que seja possível estabelecer uma interação entre eles. Estas são capacidades fundamentais para que os dispositivos ajam de maneira inteligente em todos os locais.

Nas palavras de Araujo: “o computador tem a capacidade de obter informações do ambiente no qual ele está embarcado e utilizá-lo para dinamicamente construir modelos computacionais, ou seja, controlar, configurar e ajustar a aplicação para melhor atender as necessidades do dispositivo ou usuário. O ambiente também pode e deve ser capaz de detectar outros dispositivos que venham fazer parte dele. Desta interação surge a capacidade de computadores agirem de forma ‘inteligente’ no ambiente no qual nos movemos, um ambiente povoado por sensores e serviços computacionais”.

Computação Ubíqua

A computação ubíqua surge, então, da integração da computação móvel com a computação pervasiva. Ou seja, a integração da mobilidade com a presença distribuída, imperceptível, inteligente e altamente integrada dos computadores e suas aplicações.

A tecnologia deste tipo de computação faz uso das vantagens da computação móvel e pervasiva, sendo uma junção das características dos dois conceitos. Por exemplo, a computação ubíqua se beneficia do avanço da tecnologia móvel com os dispositivos cada vez mais portáteis, de fácil transporte e, consequentemente de maior praticidade. Já da computação pervasiva, esta tecnologia se beneficia da capacidade de os dispositivos computacionais agirem de forma inteligente, com o avanço das tecnologias de inteligência artificial e o surgimento de novas redes de comunicação, os dispositivos se tornam cada vez mais presentes.


A tabela 1 mostra as dimensões da computação ubíqua.

O grau de embarcamento indica, de maneira geral, o grau de inteligência dos computadores, embutidos em ambiente pervasivo, para detectar, explorar e construir dinamicamente modelos de seus ambientes.

Princípios da Computação Ubíqua

De acordo com Hansmann, existem pelo menos três princípios identificados na ubiquidade computacional: diversidade, descentralização e conectividade. A partir destes três princípios, notamos a importância de que os dispositivos computacionais necessitem ter características específicas para cada tarefa, que possam ser usados em diferentes ambientes e que possuam padrões de conectividade entre si.

O primeiro princípio é a diversidade, que se refere a dispositivos específicos para a realização de tarefas específicas, da forma mais rápida e fácil possível. Assim, podem existir vários dispositivos que realizem determinada tarefa, mas alguns são mais específicos do que outros, dependendo do tipo de tarefa.

Nos dias de hoje, a diversidade de dispositivos é enorme e poucos deles têm capacidades únicas, visto que a integração de várias capacidades em um mesmo dispositivo é a tendência do mercado no momento atual. Portanto, um aspecto interessante do princípio da diversidade é que os sistemas computacionais devem ser capazes de gerenciar as diferentes capacidades dos mais diversos equipamentos, escolhendo automaticamente aquele que melhor se adequa à determinada situação.

O segundo princípio da Computação Ubíqua é a descentralização. Esta descreve que não existe apenas um servidor central, mas que todos os dispositivos se comunicam entre si e sincronizam informações específicas de cada um, criando assim um ambiente “inteligente”, onde todos os equipamentos trabalham e cooperam entre si.

Os aplicativos são responsáveis pela construção e troca das informações, porém é necessário que os servidores sejam robustos e ao mesmo tempo flexíveis, para gerenciar um grande número de diferentes dispositivos sincronizados.

Já o terceiro princípio, o da conectividade, caracteriza-se como tendo o usuário sempre conectado por meio de seus dispositivos. Para que isso ocorra, é necessária a padronização da comunicação entre os dispositivos. Como afirma Araujo [2], “para que se atinja a conectividade e interoperabilidade desejada é preciso basear as aplicações em padrões comuns, levando ao desafio da especificação de padrões abertos”.

Outro ponto importante da conectividade é que os dispositivos e as aplicações se movimentam juntamente com o usuário, de forma conectada e sem interrupções. Essa conexão se dá entre diversas redes heterogêneas, como as redes sem fio de longa distância e redes de média e curta distância.

Portanto, pode-se observar que os três princípios da Computação Ubíqua devem ser seguidos, para que se atinja a interação entre homem e máquina, ou seja, utilizar os dispositivos computacionais ou qualquer outro objeto com capacidades computacionais para interagir de forma visível ou invisível com o usuário, ajudando-o na realização de suas tarefas do dia-a-dia, pois esse é o grande objetivo da Computação Ubíqua.

Considerações

O caminho para a Computação Ubíqua tem avançado muito nos últimos anos. As previsões de Weiser [1] têm se concretizado, quase que como uma profecia. No futuro, não serão somente os smartphones, tablets, computadores, televisores ou e-books que estarão integrados, mas também vários objetos que não são tecnológicos, como por exemplo, cadeiras, mesas, canetas, geladeiras, agendas, e outros que serão interligados e adaptados de acordo com as necessidades de cada pessoa.

Através da elaboração deste artigo, foi possível concluir que a Computação Ubíqua está presente em nosso dia-a-dia, tanto que os usuários não necessitam mais ter conhecimentos técnicos em informática. A tendência é que a integração entre os dispositivos só aumente ainda mais, graças aos avanços da tecnologia, tornando assim o computador cada vez mais um eletrodoméstico, visando auxiliar as pessoas de forma visível ou invisível.

A Computação Ubíqua envolve uma diversidade de conceitos e tecnologias. Mesmo tendo Weiser [1] previsto que muitos conceitos que hoje se concretizam, ainda é um paradigma computacional relativamente novo, pois esta tecnologia é de alto grau de complexidade para desenvolvimento de dispositivos e aplicações.

Este artigo apresentou, de uma forma superficial, o conceito de Computação Ubíqua, juntamente com suas principais características e seus princípios.

Referências

WEISER, M. (1991). The Computer for the 21st Century, Scientific American, vol.265, no.3, Setembro., p. 94 – 104. Disponível em: <http://wiki.daimi.au.dk/pca/_files/weiser-orig.pdf>. Acessado em: 25 ago. 2013.

ARAÚJO, R. B. (2003). Computação Ubíqua: Princípios, Tecnologias e Desafios. In: XXI Simpósio Brasileiro de Redes de Computadores. (Org.). 1 ed. Natal – RN: SBRC2003, p.45 – 115.

Lyytinen, K. e Yoo, Y. (2002) “Issues and Challenges in Ubiquitous Computing”, Communications of the ACM, vol.45, no. 12, Dezembro. Apud {1}.

HANSMANN, U., MERK, L., NICKLOUS, M.S., STOBER, T. (2001) Pervasive Computing Handbook, Ed. Springer. 409 pags.


-----------------------Replicação------------------------------------


Segundo Coulouris et al. (2013) replicação é a chave para prover alta disponibilidade e tolerância a falhas em sistemas distribuídos. A alta disponibilidade é um tópico de crescente interesse, principalmente com a atual tendência em direção à computação móvel e à operação desconectada. A tolerância a falhas é uma preocupação permanente dos serviços fornecidos em sistemas nos quais a segurança funcional (safety) é fundamental e em outros tipos importantes de serviços e sistemas.

A replicação é uma técnica para melhorar serviços. As motivações para a replicação são: melhorar o desempenho de um serviço, aumentar sua disponibilidade ou torná-lo tolerante a falhas.

Melhoria de desempenho: a colocação dos dados em cache de clientes e servidores é uma maneira conhecida de melhorar o desempenho.
A replicação de dados imutáveis é simples: ela aumenta o desempenho com pouco custo para o sistema. A replicação de dados mutáveis (dinâmicos), como os da Web, acarreta sobrecargas nos protocolos para garantir que os clientes recebam dados atualizados. Assim, existem limites para a eficácia da replicação como uma técnica de melhoria de desempenho.

Tolerância a falhas: dados de alta disponibilidade não são necessariamente dados rigorosamente corretos. Eles podem estar desatualizados, por exemplo, ou dois usuários em lados opostos de uma rede que foi particionada podem fazer atualizações conflitantes e que precisem ser resolvidas. Em contraste, um serviço tolerante a falhas sempre garante comportamento rigorosamente correto, apesar de certo número e tipo de falhas. A correção está relacionada ao caráter atual dos dados fornecidos para o cliente e aos efeitos das operações do cliente sobre os dados. Às vezes, a correção também está relacionada ao tipo de respostas do serviço – como, por exemplo, no caso de um sistema de controle de tráfego aéreo, no qual dados corretos são necessários em escalas de tempo curtas.
A replicação de dados pode ser realizada via software, quando nos referimos há algumas linhas específicas numa determinada tabela ou ainda um banco de dados. Por outro lado, quando precisamos replicar um volume ou um disco, é comum recorrermos a replicação de hardware.

O uso da replicação permite o uso de vários níveis de granularidade. A replicação de banco de dados, por exemplo, permite desde a replicação de algumas linhas ou colunas específicas até um conjunto de várias tabelas ou eventualmente um banco de dados inteiro.

A replicação de dados é uma das tecnologias mais empregadas para a construção de banco de dados distribuídos.

A replicação é uma técnica para manter automaticamente a disponibilidade dos dados, a despeito das falhas do servidor. Se os dados são replicados em dois ou mais servidores que falham independentemente, então o software cliente pode acessar os dados em um servidor alternativo, caso o servidor padrão falhe ou se torne inacessível.


Na seguinte imagem, visualizamos uma implementação de replicação. Inicialmente a aplicação submete instruções de escrita (insert, update, delete) para o banco de dados.
Exemplo de replicação de dados

Inicialmente a aplicação submete instruções de escrita (insert, update, delete) para o banco de dados. Alterando, posteriormente esse banco de dados é replicado para suas quatro cópias, mantendo-as sincronizadas. Considerando que as réplicas são idênticas ao banco de dados original, uma consulta pode ser feita em qualquer uma das réplicas provendo assim cenários de alta disponibilidade e escalabilidade. A indisponibilidade do banco principal, não compromete as consultas. Uma vez que o banco principal esteja disponível, é possível redirecionar as operações de escritas para uma das réplicas.

Recentes avanços na tecnologia da informação sugerem que usuários tenham acesso a dados por intermédio de uma rede de computadores sem fios, o que nos leva a um novo paradigma na computação, estar conectado a qualquer momento em qualquer lugar. A chamada computação móvel, na qual usuários carregam dispositivos portáteis e possuem acesso a dados e informações independentemente destes estarem fixos ou em um comportamento de movimento, tem despertado bastante interesse em grandes empresas ligadas aos setores de informática e telecomunicação. Tais empresas apostam em uma crescente utilização da mobilidade computacional nos diversos setores da economia global. No trabalho a seguir será apresentada uma contextualização de ambientes computacionais móveis, e abordará o apoio que o SGBD (Sistema Gerenciador de Banco de Dados) oferece para um armazenamento persistente das informações em tais ambientes, analisando a habilidade de tratar a desconexão através de esquemas de replicação. Desta forma, o que se pretende, é analisar o esquema de integração entre instâncias de banco de dados. Para isto deverão ser estudadas estratégias de replicação que permitam esta operacionalização. Será realizado um estudo comparativo entre as principais soluções de Hardware e Software disponíveis para a aplicação em projetos de banco de dados distribuídos móveis, bem como, será apresentada a evolução da computação móvel nos últimos anos e os estudos que estão sendo realizados nesta área.